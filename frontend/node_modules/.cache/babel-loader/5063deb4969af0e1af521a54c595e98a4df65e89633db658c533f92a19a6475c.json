{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\l\\\\frontend\\\\src\\\\components\\\\FileUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './FileUploadForm.css'; // Ensure CSS for styling is available\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadForm = () => {\n  _s();\n  const [files, setFiles] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState(null);\n  const handleFileChange = e => {\n    setFiles(e.target.files);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setResponse('');\n    setError(null);\n    const formData = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      formData.append('files', files[i]);\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setResponse(res.data);\n    } catch (err) {\n      setError('Error uploading files, please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Training Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          multiple: true,\n          accept: \".txt,.docx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"upload-btn\",\n        disabled: !files || loading,\n        children: loading ? 'Uploading...' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-container\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"response\",\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploadForm, \"tK+HBjKl0uxk7BtHyTrNJGmfAKI=\");\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUploadForm","_s","files","setFiles","loading","setLoading","response","setResponse","error","setError","handleFileChange","e","target","handleSubmit","preventDefault","formData","FormData","i","length","append","res","post","headers","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","multiple","accept","disabled","_c","$RefreshReg$"],"sources":["C:/Users/l/frontend/src/components/FileUploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './FileUploadForm.css'; // Ensure CSS for styling is available\r\n\r\nconst FileUploadForm = () => {\r\n    const [files, setFiles] = useState(null); \r\n    const [loading, setLoading] = useState(false); \r\n    const [response, setResponse] = useState(''); \r\n    const [error, setError] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        setFiles(e.target.files);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setResponse('');\r\n        setError(null);\r\n\r\n        const formData = new FormData();\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('files', files[i]);\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            setResponse(res.data);\r\n        } catch (err) {\r\n            setError('Error uploading files, please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-form-container\">\r\n            <h1>Upload Training Data</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"file-input-container\">\r\n                    <input type=\"file\" onChange={handleFileChange} multiple accept=\".txt,.docx\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"upload-btn\" disabled={!files || loading}>\r\n                    {loading ? 'Uploading...' : 'Upload'}\r\n                </button>\r\n            </form>\r\n            <div className=\"response-container\">\r\n                {error && <p className=\"error\">{error}</p>}\r\n                {response && <p className=\"response\">{response}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}