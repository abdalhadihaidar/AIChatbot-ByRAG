{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./FileUploadForm.css';// Ensure CSS for styling is available\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FileUploadForm=()=>{const[files,setFiles]=useState(null);const[loading,setLoading]=useState(false);const[response,setResponse]=useState('');const[error,setError]=useState(null);const handleFileChange=e=>{setFiles(e.target.files);};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setResponse('');setError(null);const formData=new FormData();for(let i=0;i<files.length;i++){formData.append('files',files[i]);}try{const res=await axios.post('http://localhost:5000/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});setResponse(res.data);}catch(err){setError('Error uploading files, please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"upload-form-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Upload Training Data\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-input-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileChange,multiple:true,accept:\".txt,.docx\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"upload-btn\",disabled:!files||loading,children:loading?'Uploading...':'Upload'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"response-container\",children:[error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),response&&/*#__PURE__*/_jsx(\"p\",{className:\"response\",children:response})]})]});};export default FileUploadForm;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","FileUploadForm","files","setFiles","loading","setLoading","response","setResponse","error","setError","handleFileChange","e","target","handleSubmit","preventDefault","formData","FormData","i","length","append","res","post","headers","data","err","className","children","onSubmit","type","onChange","multiple","accept","disabled"],"sources":["C:/Users/l/frontend/src/components/FileUploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './FileUploadForm.css'; // Ensure CSS for styling is available\r\n\r\nconst FileUploadForm = () => {\r\n    const [files, setFiles] = useState(null); \r\n    const [loading, setLoading] = useState(false); \r\n    const [response, setResponse] = useState(''); \r\n    const [error, setError] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        setFiles(e.target.files);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setResponse('');\r\n        setError(null);\r\n\r\n        const formData = new FormData();\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('files', files[i]);\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            setResponse(res.data);\r\n        } catch (err) {\r\n            setError('Error uploading files, please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-form-container\">\r\n            <h1>Upload Training Data</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"file-input-container\">\r\n                    <input type=\"file\" onChange={handleFileChange} multiple accept=\".txt,.docx\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"upload-btn\" disabled={!files || loading}>\r\n                    {loading ? 'Uploading...' : 'Upload'}\r\n                </button>\r\n            </form>\r\n            <div className=\"response-container\">\r\n                {error && <p className=\"error\">{error}</p>}\r\n                {response && <p className=\"response\">{response}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUploadForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,sBAAsB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAe,gBAAgB,CAAIC,CAAC,EAAK,CAC5BR,QAAQ,CAACQ,CAAC,CAACC,MAAM,CAACV,KAAK,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAW,YAAY,CAAG,KAAO,CAAAF,CAAC,EAAK,CAC9BA,CAAC,CAACG,cAAc,CAAC,CAAC,CAClBT,UAAU,CAAC,IAAI,CAAC,CAChBE,WAAW,CAAC,EAAE,CAAC,CACfE,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAM,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAE/B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGf,KAAK,CAACgB,MAAM,CAAED,CAAC,EAAE,CAAE,CACnCF,QAAQ,CAACI,MAAM,CAAC,OAAO,CAAEjB,KAAK,CAACe,CAAC,CAAC,CAAC,CACtC,CAEA,GAAI,CACA,KAAM,CAAAG,GAAG,CAAG,KAAM,CAAAxB,KAAK,CAACyB,IAAI,CAAC,8BAA8B,CAAEN,QAAQ,CAAE,CACnEO,OAAO,CAAE,CACL,cAAc,CAAE,qBACpB,CACJ,CAAC,CAAC,CACFf,WAAW,CAACa,GAAG,CAACG,IAAI,CAAC,CACzB,CAAE,MAAOC,GAAG,CAAE,CACVf,QAAQ,CAAC,0CAA0C,CAAC,CACxD,CAAC,OAAS,CACNJ,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED,mBACIL,KAAA,QAAKyB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClC5B,IAAA,OAAA4B,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7B1B,KAAA,SAAM2B,QAAQ,CAAEd,YAAa,CAAAa,QAAA,eACzB5B,IAAA,QAAK2B,SAAS,CAAC,sBAAsB,CAAAC,QAAA,cACjC5B,IAAA,UAAO8B,IAAI,CAAC,MAAM,CAACC,QAAQ,CAAEnB,gBAAiB,CAACoB,QAAQ,MAACC,MAAM,CAAC,YAAY,CAAE,CAAC,CAC7E,CAAC,cACNjC,IAAA,WAAQ8B,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAC,YAAY,CAACO,QAAQ,CAAE,CAAC9B,KAAK,EAAIE,OAAQ,CAAAsB,QAAA,CACpEtB,OAAO,CAAG,cAAc,CAAG,QAAQ,CAChC,CAAC,EACP,CAAC,cACPJ,KAAA,QAAKyB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAC9BlB,KAAK,eAAIV,IAAA,MAAG2B,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAElB,KAAK,CAAI,CAAC,CACzCF,QAAQ,eAAIR,IAAA,MAAG2B,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAEpB,QAAQ,CAAI,CAAC,EAClD,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}