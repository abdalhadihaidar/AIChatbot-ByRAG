{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\l\\\\frontend\\\\src\\\\components\\\\QAInputForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QAInputForm = () => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [qaList, setQaList] = useState([]); // State to store the list of Q&A pairs\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!question || !answer) {\n      toast.error('Please provide both a question and an answer!');\n      return;\n    }\n\n    // Create a new Q&A object\n    const newQA = {\n      question,\n      answer\n    };\n\n    // Save the new Q&A to the list\n    setQaList(prevList => [...prevList, newQA]);\n\n    // Show success message\n    toast.success('Q&A submitted successfully!');\n\n    // Clear the form inputs\n    setQuestion('');\n    setAnswer('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submit Q&A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Enter your question\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: answer,\n          onChange: e => setAnswer(e.target.value),\n          placeholder: \"Enter the answer\",\n          rows: \"4\",\n          cols: \"40\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Q&A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Submitted Q&A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: qaList.map((qa, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Q:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), \" \", qa.question, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"A:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), \" \", qa.answer]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(QAInputForm, \"rboOdi8qoabOICp9zG7729aoDGo=\");\n_c = QAInputForm;\nexport default QAInputForm;\nvar _c;\n$RefreshReg$(_c, \"QAInputForm\");","map":{"version":3,"names":["React","useState","toast","jsxDEV","_jsxDEV","QAInputForm","_s","question","setQuestion","answer","setAnswer","qaList","setQaList","handleSubmit","e","preventDefault","error","newQA","prevList","success","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","rows","cols","map","qa","index","_c","$RefreshReg$"],"sources":["C:/Users/l/frontend/src/components/QAInputForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst QAInputForm = () => {\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n    const [qaList, setQaList] = useState([]); // State to store the list of Q&A pairs\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!question || !answer) {\r\n            toast.error('Please provide both a question and an answer!');\r\n            return;\r\n        }\r\n\r\n        // Create a new Q&A object\r\n        const newQA = { question, answer };\r\n\r\n        // Save the new Q&A to the list\r\n        setQaList((prevList) => [...prevList, newQA]);\r\n\r\n        // Show success message\r\n        toast.success('Q&A submitted successfully!');\r\n\r\n        // Clear the form inputs\r\n        setQuestion('');\r\n        setAnswer('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Submit Q&A</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={question}\r\n                        onChange={(e) => setQuestion(e.target.value)}\r\n                        placeholder=\"Enter your question\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea\r\n                        value={answer}\r\n                        onChange={(e) => setAnswer(e.target.value)}\r\n                        placeholder=\"Enter the answer\"\r\n                        rows=\"4\"\r\n                        cols=\"40\"\r\n                        required\r\n                    ></textarea>\r\n                </div>\r\n                <button type=\"submit\">Submit Q&A</button>\r\n            </form>\r\n\r\n            {/* Display the list of submitted Q&As */}\r\n            <h3>Submitted Q&A</h3>\r\n            <ul>\r\n                {qaList.map((qa, index) => (\r\n                    <li key={index}>\r\n                        <strong>Q:</strong> {qa.question}\r\n                        <br />\r\n                        <strong>A:</strong> {qa.answer}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QAInputForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}