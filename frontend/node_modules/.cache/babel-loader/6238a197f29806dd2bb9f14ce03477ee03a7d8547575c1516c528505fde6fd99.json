{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\l\\\\frontend\\\\src\\\\components\\\\TextInputForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify'; // Import toast\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextInputForm = () => {\n  _s();\n  const [text, setText] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/upload', {\n        text\n      });\n      toast.success('Text submitted successfully!'); // Show success toast\n    } catch (err) {\n      toast.error('Failed to submit text!'); // Show error toast\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submit Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Enter text\",\n        rows: \"5\",\n        cols: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(TextInputForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TextInputForm;\nexport default TextInputForm;\nvar _c;\n$RefreshReg$(_c, \"TextInputForm\");","map":{"version":3,"names":["React","useState","axios","toast","jsxDEV","_jsxDEV","TextInputForm","_s","text","setText","handleSubmit","e","preventDefault","res","post","success","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","rows","cols","type","_c","$RefreshReg$"],"sources":["C:/Users/l/frontend/src/components/TextInputForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify'; // Import toast\r\n\r\nconst TextInputForm = () => {\r\n    const [text, setText] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/upload', { text });\r\n            toast.success('Text submitted successfully!'); // Show success toast\r\n        } catch (err) {\r\n            toast.error('Failed to submit text!'); // Show error toast\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Submit Text</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    placeholder=\"Enter text\"\r\n                    rows=\"5\"\r\n                    cols=\"40\"\r\n                ></textarea>\r\n                <br />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextInputForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,8BAA8B,EAAE;QAAEN;MAAK,CAAC,CAAC;MACtEL,KAAK,CAACY,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVb,KAAK,CAACc,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;IAC3C;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBjB,OAAA;MAAMkB,QAAQ,EAAEb,YAAa;MAAAQ,QAAA,gBACzBb,OAAA;QACImB,KAAK,EAAEhB,IAAK;QACZiB,QAAQ,EAAGd,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;QACzCG,WAAW,EAAC,YAAY;QACxBC,IAAI,EAAC,GAAG;QACRC,IAAI,EAAC;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACZjB,OAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNjB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACf,EAAA,CA7BID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AA+BnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}